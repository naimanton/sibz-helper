var l = console.log;
var qw = console.log;
var sheConfig = {
  textareaCols: 'cols="25" ',
  style: 'style="border: orange 2px solid; '+ 
    'padding: 5px; '+ 
    'background-color: lightyellow" ', // end-space required
  productsCodesJSON: `[["Siberian Wellness. Конопляная маска для волос, 200 мл","415505","419019"],["Гель для душа с конопляным маслом, 200 мл","419020","419020"],["Гель для душа с соком томата, 200 мл","419022","419022"],["Крем для тела с конопляным маслом, 200 мл","419021","419021"],["Крем для тела с соком томата, 200 мл","419023","419023"],["Крем-суфле для лица с розой и ягодами, 50 мл SW","419585","419585"],["Мусс для тела с розой и гиалуроновой кислотой, 150 мл SW","419588","419588"],["Пенка для душа с розой и гамамелисом, 150 мл SW","419587","419587"],["Пенка для умывания с розой и ягодами, 150 мл SW","419584","419584"],["Скраб для лица с розой и ягодами, 100 мл SW","419586","419586"],["Шампунь с конопляным маслом (лето 2021)","415503","419000"],["1 Primum, духи-концентрат, 50 мл","419967","419967"],["6 Sextum, духи-концентрат, 50 мл","419969","419969"],["9 Nonum, духи-концентрат, 50 мл","419968","419968"],["Fresh Fig & Sparkling Tangerine, парфюмерная вода, 50 мл","417419","417419"],["Golden Amber & Midnight Saffron, парфюмерная вода, 50 мл","417418","417418"],["[М] Dark Vanilla & Cherry Blossom, Парфюмерная вода, 50 мл","417417","417417"],["Renaissance Triple Set","500213","500881"],["Renaissance Triple Set","500213","500881"],["Адаптовит Энергомодулирующий комплекс, спрей","500094","500802"],["Акция!! БАД \\"Истоки Чистоты. Формула 3 - Renaissance Triple Set. Formula 3\\", 120 капс","S50005",""],["БАД \\"Новомин\\" (120 капсул)","500020",""],["БАД \\"Новомин-N\\" (50 капсул)","500863","500863"],["БАД \\"Новомин-N\\" (50 капсул)","500863","500863"],["Истоки Чистоты. Формула 3","500113","500880"],["Истоки чистоты","400753","500977"],["Набор «Тригельм»","500116","500895"],["Набор «Тригельм»","500116","500895"],["Набор «Тригельм»","500116","500895"],["Новомин","500020","500882"],["Ритмы здоровья","500048","500894"],["Хронолонг Аnti-age комплекс","500449","500955"],["Агатовый бальзам, серия «Сибирский прополис»","500052","500052"],["Акция!! ENIGMA Карандаш для бровей (насыщенный коричневый / rich brown)","S42663","S42663"],["Акция!! ENIGMA Карандаш для бровей (тауп / taupe)","S42662","S42662"],["Акция!! ENIGMA Карандаш для глаз (коричневый / sparkling brown)","S42672","S42672"],["Акция!! ENIGMA Карандаш для глаз (хаки / sparkling khaki)","S46337","S46337"],["Акция!! ENIGMA Карандаш для глаз (черный / black)","S42671","S42671"],["Акция!! ENIGMA Карандаш для губ (классический красный / classic red)","S47725","S47725"],["Акция!! ENIGMA Карандаш для губ (коралловый / coral)","S47727","S47727"],["Акция!! ENIGMA Карандаш для губ (спелая вишня / ripe cherry)","S47728","S47728"],["Акция!! ENIGMA Карандаш для губ (холодный розовый / cool pink)","S47726","S47726"],["Акция!! ENIGMA Тени для век (зеленый бархат / green velvet)","S42676","S42676"],["Акция!! ENIGMA Тени для век (розовое золото / rose gold)","S42675","S42675"],["Акция!! ENIGMA Тени для век (холодный бежевый / cool beige)","S42673","S42673"],["Акция!! ENIGMA Тени для век (шампань / champagne)","S46338","S46338"],["Акция!! ENIGMA Увлажняющая помада (классический красный / classic red)","S46332","S46332"],["Акция!! ENIGMA Увлажняющая помада (коралловый / coral)","S46335","S46335"],["Акция!! ENIGMA Увлажняющая помада (спелая вишня / ripe cherry)","S46336","S46336"],["Блеск для губ (цвет: сочная ягода), 5,5 мл","412668","412668"],["Жидкая помада с эффектом металлик (цвет: красный), 5,5 мл","412669","412669"],["Жидкие румяна (цвет: малиновый румянец), 5,5 мл","416774","416774"],["Жидкие румяна (цвет: персиковый румянец), 5,5 мл","407730","407730"],["Жидкие тени для век (цвет: белая смородина), 5,5 мл","419760","419760"],["Жидкие тени для век (цвет: бузина), 5,5 мл","419759","419759"],["Жидкие тени для век (цвет: золотая ягода), 5,5 мл","419756","419756"],["Жидкие тени для век (цвет: крыжовник), 5,5 мл","419757","419757"],["Жидкие тени для век (цвет: тутовая ягода), 5,5 мл","419758","419758"],["Жидкий хайлайтер (цвет: замороженная ягода), 5,5 мл","419762","419762"],["Жидкий хайлайтер (цвет: сахарная ягода), 5,5 мл","419761","419761"],["Мерцающий блеск для губ (цвет: искрящийся нюд), 5,5 мл","407731","407731"],["Средство для контуринга лица (цвет: лесной орех), 5,5 мл","419763","419763"],["Стойкая подводка для век (цвет: угольно-черный), 1 г","407729","407729"],["Суперстойкая тушь для ресниц (цвет: коричневый), 10 г","416095","416095"],["Тушь для ресниц (ultra black / ультрачерный)","407676","407676"],["Увлажняющая помада для губ (цвет: обнаженная роза), 3,5 г","416776","416776"],["Увлажняющая помада для губ (цвет: пыльная роза), 3,5 г","416773","416773"],["Увлажняющая помада для губ (цвет: розовый бутон), 3,5 г","416775","416775"],["Ухаживающий консилер, 6 г","416772","416772"],["Витамама BABY Бальзам для купания на ромашковой воде","404241","416101"],["Витамама BABY Детский крем на ромашковой воде","404240","416100"],["Витамама BABY Детский крем на ромашковой воде","404240","416100"],["Витамама BABY Детское мыло-пенка на ромашковой воде","404242","416102"],["Витамама BABY Детское мыло-пенка на ромашковой воде","404242","416102"],["Витамама BABY Детское мыло-пенка на ромашковой воде","404242","416102"],["CoreNRG, природная профилактическая зубная паста, 75 мл","417379","417379"],["SW Природная зубная паста \\"Байкальский Шлемник\\", 100 мл","410944","410944"],["SW Природная зубная паста с сибирской облепихой (limited_2020)","416771","416771"],["«Горная лаванда», природная антибактериальная зубная паста, 100 мл","417381","417381"],["«Земляника & красная глина», комплексная зубная паста, 75 мл","411380","416555"],["«Кинотто & лемонграсс, освежающая зубная паста, 75 мл","411379","414548"],["«Морской кальций», природная профилактическая зубная паста, 100 мл","417382","417382"],["«Морской кальций», природная профилактическая зубная паста, 100 мл","417382","417382"],["«Черника & древесный уголь», биоактивная зубная паста, 75 мл","411381","416557"],["Зубная паста \\"Сибирская облепиха\\" Ежедневный уход и снижение чувствительности лого SW","411378","411378"],["Зубная паста \\"Сибирский прополис\\" с прополисом Натуральная защита лого SW","411376","411376"],["Зубная паста с сибирским шиповником, 100 мл","416769","416769"],["Зубная паста. Восстановление и обновление Сибирский шиповник, 100 мл","411377","411377"],["Набор \\"Сибирский подарок\\"","416831","416831"],["Набор \\"Улыбнись\\"","416830","416830"],["Набор Baikal Tea Collection","500856","500973"],["Набор Baikal Tea Collection","500856","501074"],["Фиточай из диких трав № 1 (Очищение и дренаж), 30 фильтр-пакетов","500581","501010"],["Фиточай из диких трав № 1 (Очищение и дренаж), 30 фильтр-пакетов","500581","501010"],["Чай из диких трав № 2 (женская гармония)","500582","501011"],["Чай из диких трав № 3 (природный антистресс)","500583","501012"],["Чай из диких трав № 4 (лёгкое дыхание)","500584","501013"],["Чай из диких трав № 4 (лёгкое дыхание)","500584","501013"],["Чай из диких трав № 5 (комфортное пищеварение)","500585","501014"],["Чай из диких трав № 6 (защита печени)","500586","501015"],["Чай из диких трав № 6 (защита печени)","500586","501015"],["Чай из диких трав № 6 (защита печени)","500586","501015"],["Чай из диких трав № 7 (лёгкость движений)","500587","501016"],["Чай из диких трав № 7 (лёгкость движений)","500587","501016"],["Чай из диких трав № 8 (сердечный комфорт)","500588","501017"],["Чай из диких трав № 9 (углеводный контроль)","500589","501018"],["Чай из диких трав № 9 (углеводный контроль)","500589","501018"],["3D Hair & Nails Cube, 30 пакетов","500571","500668"],["3D Bone Vegan Cube (Прочность и сила), 30 пакетов","500572","500692"],["3D Flex Cube, 30 пакетов","500570","500942"],["3D Flex Cube, 30 пакетов","500570","500942"],["3D Protection Cube","500440","500932"],["3D Protection Cube","500440","500932"],["BEAUTY Box (Красота и сияние), 30 пакетов","500172","500907"],["BEAUTY Box (Красота и сияние), 30 пакетов","500172","500907"],["GLUCO Box, 30 пакетов","500952","500952"],["IMMUNO Box (Защита от инфекций), 30 пакетов","500526","500621"],["IQ Box (Интеллект), 30 пакетов","500175","500908"],["IQ Box (Интеллект), 30 пакетов","500175","500908"],["LITE STEP Box (Легкая походка), 30 пакетов","500467","500919"],["PULSE Box (Сильное сердце), 30 пакетов","500443","500910"],["PULSE Box (Сильное сердце), 30 пакетов","500443","500910"],["PULSE Box (Сильное сердце), 30 пакетов","500443","500910"],["RELAX Box (Защита от стресса), 30 пакетов","500931","500931"],["VISION Box (Острое зрение), 30 пакетов","500361","500911"],["Набор \\"Mama Box\\" (Мама бокс - Беременность) (30 пакетов) bf caps","500700","500912"],["Набор \\"Mama Box\\" (Мама бокс - Беременность) (30 пакетов) bf caps","500700","500912"],["Набор \\"Mama Box\\" (Мама бокс - Беременность) (30 пакетов) bf caps","500700","500912"],["Набор \\"Mama Box\\" (Мама бокс - Грудное вскармливание) (30 пакетов) bf caps","500701","500913"],["«Витамины с кальцием», 60 капсул","500676","500810"],["«Витамины с кальцием», 60 капсул","500676","500899"],["4 Wellness","500918","500918"],["Cуставной фитосорбент Joint Comfort, 80 г","500633","500920"],["Cуставной фитосорбент Joint Comfort, 80 г","500633","500920"],["Essential Botanics Арония и Лютеин Aronia & Lutein (блистер, 30 bf caps) 2020","500653","500947"],["Essential Botanics Валериана и мелисса Valerian & Melissa (блистер, 30 bf caps) 2020","500657","500969"],["Essential Botanics Валериана и мелисса Valerian & Melissa (блистер, 30 bf caps) 2020","500657","500969"],["Essential Botanics Валериана и мелисса Valerian & Melissa (блистер, 30 bf caps) 2020","500657","500969"],["Essential Botanics Гинкго билоба и байкальский шлемник Ginkgo & Baikal skullcap (блистер, 30 bf caps) 2021","500654","500971"],["Essential Botanics Йохимбе и Женьшень Yohimbe & Ginseng (блистер, 30 bf caps)","500655","500902"],["Essential Botanics Медвежьи ушки и брусника Bearberry & Lingonberry (блистер, 30 bf caps) 2020","500656","500948"],["Essential Fatty Acids Бета-каротин и Облепиха Beta-carotene & Sea buckthorn (блистер, 30 капс.)","500660","500660"],["Essential Fatty Acids Бораго и Амарант Siberian borage & Amaranth (блистер, 30 капс.)","500659","500659"],["Essential Fatty Acids Бораго и Амарант Siberian borage & Amaranth (блистер, 30 капс.)","500659","500659"],["Essential Fatty Acids Ликопин и Омега-3 Omega-3 & Lycopine (блистер, 30 капс.) БАД","500689","500843"],["Essential Fatty Acids Лютеин и Зеаксантин Lutein and Zeaxanthin (блистер, 30 капс.) 2020","500688","500938"],["Essential Fatty Acids Лютеин и Зеаксантин Lutein and Zeaxanthin (блистер, 30 капс.) 2020","500688","500938"],["Essential Fatty Acids Северная Омега-3 Nordic Omega (банка, 60 капс.) с капсулой (Полярис)","500661","501058"],["Essential Fatty Acids Сибирский лен и Омега-3 Siberian linseed oil&Omega-3 (блистер, 30 капс.) 2020","500662","500824"],["Essential Minerals Органический Йод Iodine (банка, 60 bf caps)","500658","500888"],["Essential Minerals Органический Кальций Calcium (банка, 60 bf caps)","500628","500884"],["Essential Minerals Органический Магний Magnesium (банка, 60 bf caps)","500629","500885"],["Essential Minerals Органический Селен Selenium (банка, 60 bf caps)","500630","500886"],["Essential Minerals Органический Цинк Zinc (банка, 60 bf caps)","500631","500887"],["Essential Minerals Органическое Железо Iron (банка, 60 bf caps)","500627","500883"],["Essential Probiotics Эльбифид Elbifid (блистер, 15 капс.)","500663","500663"],["Essential Probiotics Эльбифид Elbifid (блистер, 15 капс.)","500663","500663"],["Essential Sorbents Очищающий фитосорбент Pure Life 10*7,5 г","501001","501001"],["Essential Vitamins Бетаин и В-витамины B-complex & betaine (блистер, 30 bf caps)","500625","500904"],["Essential Vitamins Бетаин и В-витамины B-complex & betaine (блистер, 30 капс.)","500625","500625"],["Essential Vitamins Витамины красоты Beauty Vitals (блистер, 30 bf caps)","500652","500898"],["Essential Vitamins Северная клюква и В-витамины B-Complex and Cranberry Vitamins (блистер, 30 bf caps)","500577","500905"],["Essential Vitamins Северная клюква и В-витамины B-Complex and Cranberry Vitamins (блистер, 30 капс.)","500577","500577"],["«Глюкозамин и хондроитин», 60 капсул","500651","500901"],["«Органический германий», 30 капсул","500954","500954"],["Витамин D3","500820","500820"],["Витамин D3","500820","500820"],["Кишечный фитосорбент Intestinal Defense, 80 г","500634","500634"],["Кишечный фитосорбент Intestinal Defense, 80 г","500634","500634"],["Кишечный фитосорбент Intestinal Defense, 80 г","500634","500634"],["Натуральный витамин Е","500981","500981"],["Органический Кальций","500914","500914"],["Органический Кальций","500914","500914"],["Очищающий фитосорбент Pure Life, 80 г","500632","500632"],["Очищающий фитосорбент Pure Life, 80 г","500632","500632"],["Cпортивный восстанавливающий гель, 100 мл","410054","410054"],["Омега-3 Ультра, 120 капсул","500484","500484"],["HARD PRO 35, протеиновый батончик (какао)","500438","500438"],["MSM Метилсульфонилметан, 90 капсул","501031","501031"],["MSM Метилсульфонилметан, 90 капсул","501031","501031"],["«L-карнитин», 120 капсул","500285","500493"],["«Глюкозамин и хондроитин», 120 таблеток","500276","500491"],["«Глюкозамин и хондроитин», 120 таблеток","500276","500491"],["«Мегавитамины, 120 таблеток","500284","500494"],["«Хромлипаза», 60 капсул","500874","500874"],["«Хромлипаза», 60 капсул","500874","500874"],["Комплекс аминокислот, 120 таблеток","500277","500492"],["Сывороточный протеин Fitness Catalyst (ванильное мороженое), 500 г","500967","500967"],["Сывороточный протеин Fitness Catalyst (тирамису), 500 г","500966","500966"],["Сывороточный протеин Fitness Catalyst (шоколадное печенье), 500 г","500968","500968"],["Сывороточный протеин Черничный чизкейк, 500 г","500964","500964"],["Natural Vitamins, 30 пакетов","500469","500539"],["Natural Vitamins, 30 пакетов","500469","500975"],["Natural Vitamins, 30 пакетов","500469","500975"],["Neurovision, 20 пакетов","500481","500976"],["SSNN BeautySense (Бьютисенс), 20 пакетов","500650","500650"],["SSNN Detox Pro.Active (Детокс), 16 пакетов","500943","500943"],["Stress Re.Live","500537","500649"],["Dino Lecithino, сироп с лецитином (вишня), 95 мл","501007","501007"],["Акция!! Хрустящие шарики Lactopus Vitamama (шоколад), 70 г","S50858",""],["Акция!! Хрустящие шарики Lactopus Vitamama (шоколад), 70 г","S50858","S50858"],["Витамама \\"Золотая рыбка\\", капсулы-рыбки (дой-пак, 75 гр.)","500126",""],["Витаминный комплекс Ditops Vitamama МИКС ФРУКТОВ, 90 табл.","500929",""],["Витаминный комплекс Ditops Vitamama МИКС ФРУКТОВ, 90 табл.","500929","500929"],["Витаминный комплекс Ditops Vitamama МИКС ФРУКТОВ, 90 табл.","500929","500929"],["Гель для растираний Dino Skino Vitamama, 40 мл","420238","420238"],["Драже «Витаминка»","500163","500215"],["Драже «Топивишка»","500120","500214"],["Золотая рыбка (капсулы-рыбки)","500126","501105"],["Золотая рыбка (капсулы-рыбки)","500126","501105"],["Сироп для иммунитета Immunotops Vitamama (с олигофруктозой), 95 мл","500715","500998"],["Сироп для иммунитета Immunotops Vitamama, 95 мл","500715","500715"],["Сироп для иммунитета Immunotops Vitamama, 95 мл","500715","500715"],["Хрустящие шарики Calcitops Vitamama (малина), 70 г","500670","500670"],["Хрустящие шарики Calcitops Vitamama (малина), 70 г","500670","500670"],["Синхровитал II (Synchrovitals II)","500071","500889"],["Синхровитал II (Synchrovitals II)","500071","500889"],["Синхровитал III (Synchrovitals III)","500072","500890"],["Синхровитал IV (Synchrovitals IV)","500130","500891"],["Синхровитал IV (Synchrovitals IV)","500130","500891"],["Синхровитал VI (Synchrovitals VI)","500065","500892"],["Синхровитал VII (Synchrovitals VII)","500050","500683"],["Anti-age Drink, напиток «Банан-персик», 8х10 г","500962","500962"],["Antiox Drink, напиток «Облепиха-корица», 8х10 г","500957","500957"],["Antistress-батончик (абрикос-маракуйя), 2х25 г","500916","500916"],["Antistress-батончик (карамель и фундук), 25 г","500644","500644"],["Antistress-батончик (карамель и фундук), 25 г","500644","500644"],["Beauty&Detox YOO GO SET","500853","500853"],["Beauty&Detox YOO GO SET","500853","500853"],["Beauty-батончик (лесные ягоды), 50 г","500504","500504"],["Calcium-батончик (кокос), 50 г","500566","500566"],["CoreNRG, леденцы, 10 штук","500523","500523"],["CoreNRG, универсальный иммунобустер, 30 мл","500327","500542"],["CoreNRG, универсальный иммунобустер, 30 мл","500327","500542"],["Detox-батончик со вкусом «Манго»","500490","500490"],["Dual Shot (кофе), батончик энергетический, 2х25 г","500789","500789"],["Immuno Drink (Защита иммунитета), напиток «Лимон-имбирь», 8х10 г","500958","500958"],["Skin Beauty & Defense (Красота и защита кожи), напиток «Малина», 5х10 г","500648","500648"],["Turbo Tea (Очищающий турбочай), 30 фильтр-пакетов","500590","500590"],["Yoo Go Relax-мармелад (Карамель), 90 г","501064","501064"],["Yoo Go Мармелад с биотином (персик-манго), 90 г","501063","501063"],["Yoo Go Медовая паста с лабазником, боярышником, пассифлорой и мелиссой, 200 г","500941","500941"],["Yoo Go Медовая паста с чабрецом, душицей и боярышником, 200 г","500940","500940"],["Акция!! Yoo GO Мармелад с облепихой и корицей, 90 г","S50514","S50514"],["Акция!! Мармелад Yoo GO с черникой, 90 г","S50427",""],["Батончик Banana Mama (вишня-банан), 50 г","500568","500568"],["Батончик YOO GO Марципан-Кешью, 2*25 г","500917","500917"],["Жевательный мармелад (малина и шиповник), 90 г","500515","500515"],["Жевательный мармелад (облепиха и пряная корица), 90 г","500514","500514"],["Жевательный мармелад CoreNRG с прополисом, 90 г","500563","500563"],["Жевательный мармелад Yoo Gо c кальцием","500426","500426"],["Жевательный мармелад Yoo Gо с черникой","500427","500427"],["Мармелад Cyber Build (яблоко-гранат), 90 г","500791","500791"],["Напиток Pure Heart (Чистое сердце)","500512","500512"],["Напиток Pure Heart (Чистое сердце)","500512","500512"],["Напиток Weight Control (малина-гранат), 14х5 г","500713","500755"],["Напиток Weight Control (яблоко-лимон), 14х5 г","500543","500754"],["Напиток Young & Beauty (Красота и молодость)","500513","500956"],["Натуральный жевательный мармелад (апельсин), 90 г","500959","500959"],["Натуральный жевательный мармелад (черная смородина), 90 г","500960","500960"],["Натуральный питательный коктейль (ежевика), 7х25 г","500635","500850"],["Натуральный питательный коктейль (кокосовое печенье), 7х25 г","500564","500817"],["Натуральный питательный коктейль (яблоко и корица), 7х25 г","500519","500818"],["ПИК-порошок (75 г)","400237","500696"],["ПИК-порошок (75 г)","400237","500696"],["Чайный коктейль (яблоко и персик), 30 пакетов по 1,5 г","500782","500782"],["IMMUNO Box (Защита от инфекций), 30 пакетов","501042","501042"],["«Ароматное шампанское», гель для душа, 250 мл","419317","419317"],["«Ароматное шампанское», крем для рук и тела, 250 мл","419314","419314"],["«Ароматное шампанское», крем для рук и тела, 250 мл","419314","419314"],["«Ароматное шампанское», пена для ванны, 250 мл","419316","419316"],["«Ваниль и лаванда», бальзам для губ, 15 мл","415106","415106"],["Крем для рук Конопляное масло & Витамин Е, 50 мл","419560","419560"],["Крем для рук Ши & Миндаль, 50 мл","419559","419559"],["Набор Dino Friends","501006","501006"],["Набор Dino Friends","501006","501006"],["Набор ProActive","419667","419667"],["Набор WELLNESS BOX","500872","500872"],["Набор «Витаминный»","501039","501039"],["Набор «Иммунный»","501038","501038"],["Набор «Лаванда»","419600","419600"],["Набор «Настоящая сибирская забота»","419666","419666"],["Набор «Новогодний»","501040","501040"],["Набор «Прополис»","419601","419601"],["Набор для волос «Конопляное масло»","420126","420126"],["Набор для волос «Объем»","420124","420124"],["Набор для волос «Объем»","420124","420124"],["Набор для волос «Увлажнение»","420123","420123"],["Набор для тела «Конопляное масло»","420127","420127"],["Набор для тела «Конопляное масло»","420127","420127"],["Новомин, 120 капсул","501041","501041"],["Bionetica PhytoCellTec™ 2% ultra lightweight face cream, 50 мл","410240","410240"],["Bionetica PhytoCellTec™ 2% ultra lightweight face cream, 50 мл","410240","410240"],["Насыщенный крем для лица, 7 мл","410283","410283"],["Тотальная сыворотка красоты, 7 мл","411375","411375"],["Ультралегкий крем для лица, 7 мл","410284","410284"],["Experalta Platinum The Body Lab Антицеллюлитный концентрат","411382","411382"],["Experalta Platinum Интенсивно восстанавливающий Ночной крем (2020)","408374","415710"],["Experalta Platinum Интенсивно восстанавливающий Ночной крем 7 мл","410287","410287"],["Experalta Platinum Крем для кожи вокруг глаз","404326","415711"],["Experalta Platinum Обновляющий ночной крем с растительными пептидами, 50 мл","418446","418446"],["Experalta Platinum Омолаживающий Дневной флюид (2020)","408372","415716"],["Experalta Platinum Омолаживающий Дневной флюид 7 мл","410285","410285"],["Experalta Platinum Омолаживающий тоник-софтнер","408253","415712"],["Experalta Platinum Сыворотка-концентрат «МОДЕЛИРОВАНИЕ И ЛИФТИНГ»","404325","416082"],["Experalta Platinum Увлажняющий тонирующий крем SPF 15 (натуральный бежевый), 30 мл","420730","420730"],["Ампульный концентрат «Возрождение», 30 мл","416105","416105"],["Ампульный концентрат «Лифтинг и упругость», 30 мл","416107","416107"],["Ампульный концентрат «Увлажнение», 30 мл","416106","416106"],["Ампульный концентрат с бакучиолом, 30 мл","416108","416108"],["Гидрогелевые патчи для кожи вокруг глаз, 60 шт","410682","410682"],["Дневной крем с растительными пептидами, 50 мл","418445","418445"],["Интеллектуальный крем, 50 мл","413494","413494"],["Интеллектуальный крем, 50 мл (сменный блок)","413495","413495"],["Мицеллярная вода для снятия макияжа, 200 мл","408369","415708"],["Мягкий гель для умывания с пробиотиками, 100 мл","418443","418443"],["Нежное очищающее средство, 100 мл","409977","415713"],["Очищающее масло для умывания, 200 мл","408368","415719"],["Пилинг для глубокого очищения и выравнивания кожи, 200 мл","408370","415720"],["Пилинг для глубокого очищения и выравнивания кожи, 200 мл","408370","415720"],["Увлажняющий тонирующий крем SPF 15 (light/светлый), 30 мл","407583","411305"],["Увлажняющий тонирующий крем SPF 15 (medium/средний), 30 мл","411998","411306"],["Эксфолиант для очищения пор, 100 мл","408371","411292"],["Эксфолиант для очищения пор, 100 мл","408371","411292"],["Эксфолиант для очищения пор, 100 мл","408371","411292"],["Experalta Aurum Питательная маска для лица / Nourishing Face Mask, 50 мл","418893","418893"],["Золотой медовый гель для умывания, 200 мл","418896","418896"],["Пробуждающая сыворотка для лица, 30 мл","418895","418895"],["Experalta Biomelle Восстанавливающий дневной крем для лица SPF 15/PA +++, 30 мл","419609","419609"],["Experalta Biomelle Крем для кожи вокруг глаз, 15 мл","419610","419610"],["Experalta Biomelle Сыворотка с витамином С для снятия стресса кожи, 30 мл","419603","419603"],["Интенсивно увлажняющий крем для лица, 50 мл","420056","420056"],["Крем для сужения пор и выравнивания кожи, 50 мл","420058","420058"],["Сыворотка для сияния и увлажнения кожи, 60 мл","420057","420057"],["Сыворотка, сужающая поры, 60 мл","420059","420059"],["Укрепляющий крем для лица, 50 мл","402000","402000"],["Absolu (Абсолют), парфюмерная вода, 50 мл","412914","412914"],["Altai (Алтай), парфюмерная вода, 5 мл","410007","410007"],["L'INSPIRATION DE SIBÉRIE Altai, парфюмерная вода, 50 мл","419220","419220"],["L'obsession (Страсть), парфюмерная вода, 50 мл","410014","410014"],["La Force (Сила), парфюмерная вода, 5 мл","410009","410009"],["La Force (Сила), парфюмерная вода, 5 мл","410009","410009"],["La Force (Сила), парфюмерная вода, 50 мл","410012","410012"],["La Liberté (Свобода), парфюмерная вода, 5 мл","410010","410010"],["La Liberté (Свобода), парфюмерная вода, 50 мл","410013","410013"],["Olkhon (Ольхон), парфюмерная вода, 5 мл","410008","410008"],["Olkhon, парфюмерная вода, 1,5 мл","407955","407955"],["Taiga (Тайга), парфюмерная вода, 5 мл","410006","410006"],["Taiga (Тайга), парфюмерная вода, 50 мл","406413","406413"],["Taiga (Тайга), парфюмированный гель для душа, 230 мл","409846","409846"],["[М] Парфюмерная вода Dynamique, 50 мл","419224","419224"],["[М] Парфюмерная вода Olkhon, 50 мл","419221","419221"],["Évolucion (Эволюция), парфюмерная вода, 50 мл","412913","412913"],["Бальзам-кондиционер для роста волос, 250 мл","404783","404783"],["GREEN-мыло для кухни","412254","412254"],["GREEN-мыло для кухни","412254","412254"],["Акция!! Део-гель для интимной гигиены 150 мл SW","S41576","S41576"],["Акция!! Спрей для рук антибактериальный, 50 мл","S46727",""],["Антибактериальный спрей для интимной гигиены, 60 мл","411578","417142"],["Бальзам после бритья, 100 мл","411580","411580"],["Бальзам после бритья, 100 мл","411580","411580"],["Гель для бритья, 100 мл","411581","411581"],["Гель для деликатного ухода, 30 мл","411577","411577"],["Гель для деликатного ухода, 30 мл","411577","411577"],["Гель для умывания с омега-кислотами, 300 мл","411585","418897"],["Дезодорант для тела, 60 мл","406402","406402"],["Крем для век обновляющий, 15 мл","411212","411212"],["Крем для век с комплексом жирных кислот омега-3, -6, -7, -9, 15 мл","411587","411587"],["Крем для век с комплексом жирных кислот омега-3, -6, -7, -9, 15 мл","411587","411587"],["Крем для лица дневной SPF 15 с антиоксидантами","411583","418874"],["Крем для лица ночной антиоксидантный","411584","418875"],["Крем для лица обновляющий с Q10, 50 мл","411211","411211"],["Крем для лица с комплексом жирных кислот омега-3, -6, -7, -9","411586","411586"],["Крем для лица с комплексом жирных кислот омега-3, -6, -7, -9","411586","411586"],["Крем для лица увлажняющий","404777","404777"],["Крем для ног (комплексный уход), 75 мл","411567","411567"],["Крем для ног (комплексный уход), 75 мл","411567","411567"],["Крем для ног антибактериальный, 75 мл","411588","411588"],["Крем для проблемной кожи_SW, 50 мл","414563","414563"],["Крем-комплекс для зрелой кожи","404778","418878"],["Крем-комплекс для зрелой кожи","404778","418878"],["Крем-масло для тела питательный, 150 мл","409978","409978"],["Крем-масло для тела питательный, ВЕСНА 2021","418409","418409"],["Маска для лица отбеливающая, 50 мл","415753","415753"],["Маска для лица питательная","410277","410277"],["Маска для лица питательная","410277","410277"],["Пенка для интимной гигиены, 150 мл","411575","411575"],["Пилинг для лица энзимный, 50 мл","415754","415754"],["Пилинг для лица энзимный, 50 мл","415754","415754"],["Скраб для рук Основной уход","410275","410275"],["Солнцезащитное молочко для тела SPF 30","412270","412270"],["Солнцезащитный крем для лица SPF 50","412269","412269"],["Спрей увлажняющий для лица и волос, 60 мл","416038","416038"],["Спрей-уход для объема волос, 60 мл","416000","416000"],["Тоник для лица антиоксидантный","411582","411582"],["Шампунь против перхоти, 250 мл","404788","418873"],["Шампунь-гель для душа для мужчин","411579","411579"],["Гель для душа (основной уход), 250 мл","410274","410274"],["Гель для умывания, 75 мл","414982","414982"],["Гель для умывания, 75 мл","414982","414982"],["Гель для умывания, 75 мл","414982","414982"],["Кондиционер восстанавливающий, 250 мл","416045","416045"],["Кондиционер для объёма волос, 250 мл","416043","416043"],["Кондиционер увлажняющий, 250 мл","416040","416040"],["Крем для рук питательный, 75 мл","414983","414983"],["Маска для волос восстанавливающая, 200 мл","416046","416046"],["Маска для волос восстанавливающая, 200 мл","416046","416046"],["Пенка для умывания увлажняющая, 150 мл","417694","417694"],["Тоник для лица матирующий 200 мл SW","414811","414811"],["Тоник для лица увлажняющий, 200 мл","414810","414810"],["Тоник для лица увлажняющий, 200 мл","414810","414810"],["Универсальное мыло для рук и тела, 300 мл","412444","412444"],["Универсальный крем для рук и тела, 300 мл","412445","412445"],["Фитомыло для интимной гигиены, 300 мл","411568","411568"],["Шампунь восстанавливающий, 250 мл","416044","416044"],["Шампунь для объема волос, 250 мл","416042","416042"],["Шампунь для роста волос, 250 мл","417704","417704"],["Шампунь для роста волос, 250 мл","417704","417704"],["Шампунь увлажняющий, 250 мл","416039","416039"],["«Корень», бальзам широкого спектра действия, 250 мл","409066","409066"],["«Корень», бальзам широкого спектра действия, 250 мл","409066","409066"],["Бальзам-флорасептик, 250 мл","409069",""],["Бальзам-флорасептик, 250 мл","409069","409069"],["Бальзам-флорасептик, 250 мл","409069","409069"],["Восстанавливающий бальзам, 30 мл","416558","416558"],["Восстанавливающий бальзам, 30 мл","416558","416558"],["«Корень», бальзам-концентрат для массажа, 100 мл","417917","417917"],["«Уян Номо», бальзам для тела, 100 мл","414328","418974"],["«Уян Номо», бальзам для тела, 100 мл","414328","418974"],["«Уян Номо», бальзам для тела, 100 мл","414328","418974"],["«Уян Номо», дегтярный бальзам для тела, 50 мл","409063","419478"],["Бальзам форте расслабляющий, 50 мл","416560","416560"],["Восстанавливающий крем-гель с пантенолом, 40 мл","417706","417706"],["Пихтовый бальзам для растираний, 50 мл","409064","409064"],["Тонизирующий крем для ног, 75 мл","416559","416559"],["\\"Живокост\\" Восстанавливающий Форте-бальзам, 100 мл (без коробки)","415535","418729"],["\\"Живокост\\" Восстанавливающий Форте-бальзам, 100 мл (без коробки)","415535","418729"],["Фитомедика. Восстанавливающий бальзам «Живокост»","402692","416122"],["Фитомедика. Восстанавливающий бальзам «Живокост»","402692","416122"],["«Кедр & яблоко», сахарный скраб для тела, 100 мл","410015","410015"],["«Кедр & яблоко», увлажняющее молочко для тела, 250 мл","410018","410018"],["«Кедр & яблоко», увлажняющий крем-гель для душа, 250 мл","410021","410021"],["«Лесная земляника & зеленый чай», увлажняющий крем-гель для душа, 250 мл","410022","410022"],["Акция!! SPA Увлажняющее молочко для тела Кедр & яблоко","S40018","S40018"],["SPA Vanilla & Lavender Крем для рук, 75 мл","415104","415104"],["SPA «Ваниль & лаванда», увлажняющий мусс для тела, 200 мл","415105","415105"],["«Малина & вербена», крем для рук","411170","411170"],["«Малина & вербена», крем для рук","411170","411170"],["«Молочный овес & рисовое масло», крем для рук","411168","411168"],["«Корень», бальзам широкого спектра действия, 250 мл","402860","402860"],["«Корень», бальзам широкого спектра действия, 250 мл","402860","402860"],["«Корень», бальзам широкого спектра действия, 250 мл","402860","402860"],["Духаал аза (Капля счастья) Массажное масло расслабляющее, 100 мл","401834","405145"],["Духаал аза (Капля счастья) Массажное масло расслабляющее, 100 мл","401834","405145"],["Духаал аза (Капля счастья) Массажное масло согревающее, 100 мл","401833","405146"],["Духаал аза (Капля счастья) Массажное масло согревающее, 100 мл","401833","405146"],["Духаал аза (Капля счастья) Массажное масло тонизирующее, 100 мл","401832","405147"],["ЭПАМ 1000","400264","400264"],["ЭПАМ 11","400265","400265"],["ЭПАМ 24","400266","400266"],["ЭПАМ 31","400267","400267"],["ЭПАМ 31","400267","400267"],["ЭПАМ 4","400268","400268"],["ЭПАМ 44","400270","400270"],["ЭПАМ 7","400271","400271"],["ЭПАМ 900","400273","400273"],["ЭПАМ 96","400274","400274"]]`,
}
var vfy = function (assertion, description) {
  if ( assertion !== true && assertion !== false ) {
    throw new Error("conditionWrapper-parameter must return boolean value.");
  }

  if (!assertion) {
    throw new Error(
      JSON.stringify({
        description
      }, false, 4)
    );
  }
  console.log('Sibz Helper Extension: (' + description + ") was verified." )
};
var vfyEl = function (selector) {
	var el = document.querySelector(selector);
	vfy(el instanceof HTMLElement, selector + ' not found.');
	return el;
};
function getCookie(a){for(var b=document.cookie.split(";"),e,c=0;c<b.length;c++){var d=b[c].trim();0===d.indexOf(a+"\x3d")&&(e=d.substring((a+"\x3d").length,d.length))}return e}
var includesAnyOf = (string, array) => {
  for (var elem of array) {
    if (string.includes(elem)) {
      return true;
    }
  }
  return false;
};
var sheContent = {
  init() {
    l('SHE: sheContent initializing...');
    this.pathnames = {
      order: "/ru/store/header/order/showcase/new/",
      facture: "/ru/store/header/new/edit/",
      factureCreating: "/ru/store/header/new/create/",
      headerNew: "/ru/store/header/new/",
      wellnessCart: "/kz-ru/cart/",
      factureList: "/store/header/index/list/",
    };
    this.choice = {};
    l("SHE: Scripts' choosing...");
    this.chooseScript.call(this, document.location.pathname);
    l('SHE: sheContent initialized.')
    return this;
  },
  chooseScript(pathname) {
    if (pathname === this.pathnames.order) {
      this.choice.autoOrder = this.scripts.autoOrder.init();
      this.choice.formatProduct = this.scripts.formatProduct.init();
      this.choice.orderBackup = this.scripts.orderBackup.init();
      this.choice.orderCleaning = this.scripts.orderCleaning.init();
    }
    else if (pathname === this.pathnames.facture) {
    	this.choice.selectCodesByNames = this.scripts.selectCodesByNames.init();
      this.choice.autoFacture = this.scripts.autoFacture.init();
      this.choice.factureToOrder = this.scripts.factureToOrder.init();
    }
    else if (pathname === this.pathnames.headerNew) {
    	this.choice.moreInfoAboutCustomer = this.scripts.moreInfoAboutCustomer.init();
    }
    else if (pathname === this.pathnames.wellnessCart) {
      this.choice.wellnessCartProductSearch = this.scripts.wellnessCartProductSearch.init();
    }
    else if (pathname === this.pathnames.factureCreating) {
    	this.choice.editButtonForNewCreate = this.scripts.editButtonForNewCreate.init();
    	this.choice.selectCodesByNames = this.scripts.selectCodesByNames.init();
    }
    else if (pathname.includes(this.pathnames.factureList)) {
      this.choice.factureListContractFinder = this.scripts.factureListContractFinder.init();
    }

    if (
      pathname === this.pathnames.facture ||
      pathname === this.pathnames.factureCreating
    ) 
    {
      this.choice.allFactureItemsCheckbox = (
        this.scripts.allFactureItemsCheckbox.init()
      );
    }
  },
  scripts: {
    factureListContractFinder: {
      init() {
        var inputs = [...document.querySelectorAll('#contract')];
        for (var i = 0; i < inputs.length; i++) {
          inputs[i].insertAdjacentHTML('afterend', `<datalist id="sheContractsDatalist${i}"></datalist>`)
          inputs[i].setAttribute('list', `sheContractsDatalist${i}`);
          inputs[i].addEventListener('change', ((i,e) => {
            var datalist = document.querySelector('#sheContractsDatalist' + i);
            if (e.target.value.length < 4) {
              datalist.innerHTML = '';
              return;
            }
            var isIncludingAnyNumber = includesAnyOf(
              e.target.value,
              "0123456789".split('')
            );
            if (isIncludingAnyNumber) return;
            this.fetchContract(e.target.value).then(res => {
              var options = ''
              for (var opt of res.data) {
              var closed = '';
              if (opt.is_closed != 0) {
                closed = '[З]'
              }
                options += `<option value="${opt.contract}"><i>${closed} ${opt.name}, ${opt.city_name}</i></option>`
              }
              datalist.innerHTML = options;
            });

          }).bind(this, i))
        }
        return this;
      },
      fetchContract(pattern) {
        return fetch(`https://kz.siberianhealth.com/ru/store/header/new/search_customer/?pattern=${pattern}&isShowingClosed=1`, {
          "headers": {
            "accept": "application/json, text/javascript, */*; q=0.01",
            "accept-language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
            "ml-contract": "M11123",
            "sec-ch-ua": "\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "same-origin",
            "x-requested-with": "XMLHttpRequest"
          },
          "referrer": "https://kz.siberianhealth.com/ru/store/header/new/",
          "referrerPolicy": "strict-origin-when-cross-origin",
          "body": null,
          "method": "GET",
          "mode": "cors",
          "credentials": "include"
        }).then(p=> p.json());
      },
    },
    wellnessCartProductSearch: {
      autocompleteApiKey: 'JC5KJBC11N',
      productSize: 30,
      perPage: 30,
      searchResultData: null,
      clickedTr: null,
      defaultPlace: {
        cityId: 267,
        regionId: 22,
      },
      init() {
        this.definedPlace = this.definePlace();
        if (this.definedPlace === false) {
          this.definedPlace = this.defaultPlace;
        }
        document.head.insertAdjacentHTML(
          'beforeend',
          `<style>
            #sheProductSearch {
              background-color: #f4f4f4;
              overflow-wrap: break-word;
            }
            #sheProductSearchTable td {
              border: 1px solid;
            }
            #sheProductSearchTable a:hover {
              color: rgb(102, 65, 240);
            }
            #sheGlobTr > td {
              max-width: 50%;
            }
          </style>`
        );
        document.body.insertAdjacentHTML(
          'afterend',
          `<div id="sheProductSearch">
            Идентификатор города: ${this.definedPlace.cityId} (267 - Караганда). <br>
            <input style="padding: 5px;" id="sheProductSearchInput" placeholder="Поиск (Enter)">
            <table>
              <tr id="sheGlobTr">
                <td valign="top" ><table id="sheProductSearchTable"></table></td>
                <td valign="top" id="sheProductSearchInfo"></td>
              </tr>
            </table>
          </div>`
        );
        sheProductSearchInput.addEventListener('change', () => {
          if (sheProductSearchInput.value === '') {
            sheProductSearchTable.innerHTML = ''
            sheProductSearchInfo.innerHTML = ''
            return;
          }
          this.search.call(this, sheProductSearchInput.value, this.productSize, this.perPage)
          .then(r => {
            var list = this.sift.call(this, r.List);
            this.searchResultData = list;
            this.visualizeSearchResult.call(this, sheProductSearchTable, list);
          })
        });
        sheProductSearchTable.addEventListener('click', e => {
          if (e.target.src === undefined) return;
          if (this.clickedTr) {
            this.clickedTr.style.backgroundColor = '';
          } 
          var path = e.composedPath();
          this.clickedTr = path[2];
          this.clickedTr.style.backgroundColor = 'white';
          var index = path[2].getAttribute('data-sheIndex');
          qw(this.searchResultData);
          sheProductSearchInfo.innerHTML = '<b>' + path[2].children[2].innerHTML + '</b>' + 
            '<hr><h3>Применение: </h3><br>' + this.searchResultData[index].useWay + 
            '<hr><h3>Состав: </h3><br>' + this.searchResultData[index].composition + 
            '<hr><h3>Описание: </h3><br>' + this.searchResultData[index].description
        });
      },
      definePlace() {
        var cityId = getCookie('currentCityId');
        var regionId = getCookie('RegionId');
        if (isFinite(cityId) && isFinite(regionId)) {
          return {cityId, regionId}; 
        }
        return false;
      },
      sift(productList) {
        var result = [];
        for (var line of productList) {
          var simple = {
            options: [],
            code: line.Code,
            price: line.Price,
            url: line.UrlCode,
            points: line.Point,
            weight: line.Weight,
            discount: line.Discount,
            fullName: line.NameFull,
            oldPrice: line.OldPrice,
            useWay: line.UseWayText,
            description: line.Description,
            isOnlyOnline: line.IsOnlyOnline,
            remain: line.ProductSaldo.Volume,
            composition: line.FullComposition,
          };
          if (line.Images[0] && line.Images[0] && line.Images[0].TinyUrl) {
            simple.smallImageUrl = line.Images[0].SmallUrl;
          }
          if (line.SaleEndDate[0] !== '0') {
            simple.sale = {
              startDate: this.beautifySaleDate(line.SaleStartDate),
              endDate: this.beautifySaleDate(line.SaleEndDate),
            }
          }
          else if (line.Discount !== 0) {
            simple.sale = {
              startDate: 'месяц',
              endDate: 'месяц',
            } 
          }
          else {
            simple.sale = {
              startDate: '',
              endDate: '',
            } 
          }
          if (line.ProductOptions !== null) {
            for (var option of line.ProductOptions) {
              simple.options.push({
                name: option.Name,
                value: option.Value,
              });
            }
          }
          result.push(simple);
        }
        return result;
      },
      beautifySaleDate(date) {
        var splitted = date.split('T');
        splitted = [splitted[0], splitted[1].split('+')[0]];
        return splitted.join(' - ');
      },
      search(st, productSize, perPage) {
        return this.fetch.autocomplete.call(this,st, productSize)
        .then(r => this.fetch.product(this.makeCodes(r), perPage, this.definedPlace.cityId, this.definedPlace.regionId));
      },
      makeCodes(autocompleteResult) {
        vfy(typeof autocompleteResult === 'object' && autocompleteResult !== null);
        vfy(autocompleteResult.products.length !== undefined);
        var result = '';
        for (var product of autocompleteResult.products) {
          result += `Codes[]=${product.id}&`
        }
        return result;
      },
      visualizeSearchResult(table, productList) {
        var html = `<tr>
            <td>Карт.</td>
            <td>Код</td>
            <td>Название</td>
            <td>Остаток</td>
            <td>Баллы</td>
            <td>Цена</td>
            <td>Скидка</td>
          </tr>`;
        for (var index = 0; index < productList.length; index++) {
          var item = productList[index];
          var discPerc = (+item.oldPrice - +item.price) / +item.oldPrice * 100; 
          html += `<tr data-sheIndex="${index}" >
            <td><img src="${item.smallImageUrl}"></td>
            <td><a href="${item.url}" target="_blank">${item.code}</a></td>
            <td>${item.fullName}<br>${this.stringifyOptions(item.options)}</td>
            <td>${item.remain}</td>
            <td>${item.points}</td>
            <td title="Только ИМ: ${item.isOnlyOnline ? 'Да' : 'Нет'}">${item.price}</td>
            <td>${discPerc}%; ${item.discount} тенге<hr>Без скидки: ${item.oldPrice}<hr>с ${item.sale.startDate}<hr>до ${item.sale.endDate}</td>
          </tr>`;
        }
        table.innerHTML = html;
      },
      stringifyOptions(options) {
        var result = '';
        for (var op of options) {
          result += op.name + ' - ' + op.value + '; ';
        }
        return result;
      },
      fetch: {
        autocomplete(st, productSize) {
          return fetch(`https://autocomplete.diginetica.net/autocomplete?st=${st}&productsSize=${productSize}&apiKey=${this.autocompleteApiKey}&regionId=global&strategy=vectors_extended,zero_queries_predictor&forIs=true&showUnavailable=false&withContent=false&withSku=false&RegionId=22&LanguageId=9&UserTimeZone=6&CityId=4`, {
            "headers": {
              "accept": "application/json, text/plain, */*",
              "accept-language": "ru,en-US;q=0.9,en;q=0.8,bg;q=0.7",
              "sec-ch-ua": "\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\"",
              "sec-ch-ua-mobile": "?0",
              "sec-ch-ua-platform": "\"Windows\"",
              "sec-fetch-dest": "empty",
              "sec-fetch-mode": "cors",
              "sec-fetch-site": "cross-site",
              "token": getCookie('token')
            },
            "referrer": "https://kz.siberianwellness.com/",
            "referrerPolicy": "strict-origin-when-cross-origin",
            "body": null,
            "method": "GET",
            "mode": "cors",
            "credentials": "omit"
          }).then(p => p.json().then(r => r));
        },
        product(codes, perPage, cityId, regionId) {
          return fetch(`https://kz.siberianwellness.com/api/v1/product?${codes}CurrentPage=1&PerPage=${perPage}&CityId=${cityId}&RegionId=${regionId}&LanguageId=9&InputSearch=true&IsActive=true&SortBy=code&UserTimeZone=6`, {
            "headers": {
              "accept": "application/json, text/plain, */*",
              "accept-language": "ru,en-US;q=0.9,en;q=0.8,bg;q=0.7",
              "sec-ch-ua": "\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\"",
              "sec-ch-ua-mobile": "?0",
              "sec-ch-ua-platform": "\"Windows\"",
              "sec-fetch-dest": "empty",
              "sec-fetch-mode": "cors",
              "sec-fetch-site": "same-origin",
              "token": getCookie('token')
            },
            "referrer": "https://kz.siberianwellness.com/kz-ru/?mobileActiveType=menu&menu=main%2F1",
            "referrerPolicy": "strict-origin-when-cross-origin",
            "body": null,
            "method": "GET",
            "mode": "cors",
            "credentials": "include"
          }).then(p => p.json().then(r => r));
        }
      }
    },
  	selectCodesByNames: {
  		init() {
  			let pool = [];
  			let datalist = `<datalist id="sheCodesDatalist">`;
  			let codes = JSON.parse(sheConfig.productsCodesJSON);
  			for (let row of codes) {
  				if (pool.includes(row[1])) continue;
  				pool.push(row[1]);
  				datalist += `<option value="${row[1]}">${row[0]}</option>`
  			}
  			pool = null;
  			datalist += '</datalist>';
  			let codeInput = vfyEl('#code');
  			codeInput.insertAdjacentHTML('afterend', datalist);
  			codeInput.setAttribute('list', 'sheCodesDatalist');
  			codeInput.setAttribute('placeholder', 'Название');
  			codes = null;
  		},
  	},
  	editButtonForNewCreate: {
  		init() {
  			var delBoxCh3 = vfyEl('#delBox > div:nth-child(3)');
  			var factura_Td = vfyEl('#delBox > div:nth-child(1) > table > tbody > tr > td:nth-child(1)');
  			delBoxCh3.insertAdjacentHTML('afterbegin', `
  				<form class="edForm" method="post" action="/ru/store/header/new/edit/">
	                <input type="hidden" name="factura_id" value=${factura_Td.innerText}>
	                <input type="submit" id="edit" class="btn" value="Перейти к редактированию фактуры">
            	</form>
  			`)
  		},
  	},
  	moreInfoAboutCustomer: {
  		init() {
  			var submit = document.getElementById('submit');
  			var inputFrom = document.querySelector('input[name=fromContract');

  			vfy(submit instanceof HTMLElement, 'Submit-element was not found');
  			vfy(inputFrom instanceof HTMLElement, 'InputFrom-element was not found');
  			submit.insertAdjacentHTML('afterend', '<button '+sheConfig.style+' id="moreCustomerInfoButton" type="submit" style="margin: 5px !important;">Подробно</button><br><div id="moreCustomerInfoDiv"></div')
  			moreCustomerInfoButton.addEventListener('click', (e) => {
  			    e.preventDefault();
    				vfy(inputFrom.value.length > 4, 'Выберите покупателя!'); 
  			    this.getInfoAboutCustomer.call(
  			    	this, 
  			    	inputFrom.value
  			    ).then(p => p.json().then( r => moreCustomerInfoDiv.innerHTML = this.rToHTML.call(this, r)) );
  			});
  			return this;
  		},
  		getInfoAboutCustomer(contract) {
		    return fetch("https://kz.siberianhealth.com/ru/store/header/new/info_customer/", {
		      "headers": {
		        "accept": "application/json, text/javascript, */*; q=0.01",
		        "accept-language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
		        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
		        "ml-contract": "M11123",
		        "sec-ch-ua": "\".Not/A)Brand\";v=\"99\", \"Google Chrome\";v=\"103\", \"Chromium\";v=\"103\"",
		        "sec-ch-ua-mobile": "?0",
		        "sec-ch-ua-platform": "\"Windows\"",
		        "sec-fetch-dest": "empty",
		        "sec-fetch-mode": "cors",
		        "sec-fetch-site": "same-origin",
		        "x-requested-with": "XMLHttpRequest"
		      },
		      "referrer": "https://kz.siberianhealth.com/ru/store/header/new/",
		      "referrerPolicy": "strict-origin-when-cross-origin",
		      "body": `contract=${contract}`,
		      "method": "POST",
		      "mode": "cors",
		      "credentials": "include"
		    });
		  },
    	rToHTML(r) {
  	    let d = r.data;
  	    console.log(d);
  	    let t = {
  	        true: 'да',
  	        false: 'нет',
  	        null: 'неизвестно',
  	        undefined: 'неизвестно',
  	    };
  	    let rank;
  	    if (typeof d.Rank === 'object' && d.Rank !== null) {
  	        rank = d.Rank.nameShort || d.Rank.name;
  	    }
  	    else {
  	        rank = t.null;
  	    }
  	    return `
  	        <br><span>Номер магазина: ${t[d.storeContract] || d.storeContract}</span><br>
  	        <span>День рождения: ${t[d.birthday] || d.birthday}</span><br>
  	        <span>Дата регистрации: ${t[d.dtRegister] || d.dtRegister.split('T')[0]}</span><br>
  	        <span>E-mail подтвержден: ${t[d.isEmailVerified]}</span><br>
  	        <span>Телефон подтвержден: ${t[d.isPhoneVerified]}</span><br>
  	        <span>Телефон: ${t[d.phoneRaw] || d.phoneRaw}</span><br>
  	        <span>Ранг: ${rank}</span><br>
  	        <span>Адрес: ${t[d.address] || d.address}</span><br>
  	    `
    		}
  	},
  	factureToOrder: {
  		init() {
  			this.productTabs = document.querySelector('#productTabs');
        	this.productsCodes = JSON.parse(sheConfig.productsCodesJSON);
  			vfy(this.productTabs !== null);
			this.productTabs.insertAdjacentHTML(
	          "beforeend",
	          '<textarea ' + 
	            sheConfig.style +
	            'placeholder="Нажмите на поле и Ctrl+Delete" ' + 
	            'style="margin-left: 90px;" ' + 
	            'rows="5" ' + 
	            'cols="30" ' + 
	            'id="textareaFactureToOrder">' +
	          '</textarea>'
	        );
	        this.textareaFactureToOrder = document.querySelector('#textareaFactureToOrder');
	        this.textareaFactureToOrder.addEventListener('keydown', this.convert.bind(this));
  		},
  		convert(e) {
  			this.itemRows = document.querySelectorAll('.itemRow');
  			this.facturaItemsTrs = [...document.querySelectorAll('#facturaItems tr')];
  			vfy(this.facturaItemsTrs.length > 6);
  			this.finalTr = this.facturaItemsTrs[this.facturaItemsTrs.length-3];
  			vfy(this.finalTr.innerText.includes('Итог'));
  			if (e.key === 'Delete' && !e.repeat && e.ctrlKey) {
        		var res = 'Код\tПродукт\tКоличество\tБаллы\tЦена\n';
        		for (var row of this.itemRows) {
        			let tds = row.children;
        			res += this.findAnotherProductCodeIndice(tds[1].innerText) + '\t' +
        				tds[2].innerText + '\t' +
        				tds[3].children[0].value + '\t' +
        				tds[4].innerText + '\t' +
        				tds[5].innerText + '\n';
        		}
        		let finch = this.finalTr.children;
        		res += 'Итог:\t\t' +  
        			finch[3].innerText + '\t' + 
        			finch[4].innerText + '\t' + 
        			finch[6].innerText.replace(' (KZT)', '');
        		this.textareaFactureToOrder.value = res;
        	}
  		},
  		findAnotherProductCodeIndice(article) {
	        l('SHE: Start searching another code for ' + article)
	        var line;
	        for (var i = 0; i < this.productsCodes.length; i++) {
	          if (this.productsCodes[i].includes(article)) {
	            line = i;
	            break;
	          }
	        }

	        vfy(
	          line !== undefined,
	          "Expected: this.productsCodes includes line with code: " + article
	        );

	        if (this.productsCodes[line][1] === this.productsCodes[line][2]) {
	          return this.productsCodes[line][1];
	        }
	        if (this.productsCodes[line][1] === article) {
	          return this.productsCodes[line][2];
	        }
	        if (this.productsCodes[line][2] === article) {
	          return this.productsCodes[line][1]
	        }

	      }
  	},
    formatProduct: {
      init() {
        l('SHE: formatProduct initializing...')
        var blockList = document.querySelector("#blockList");

        vfy(
          blockList !== null, 
          'Expected that document.querySelector("#blockList") is not null.',
        );

        blockList.insertAdjacentHTML(
          "beforebegin",
          '<input ' +
            sheConfig.style +
            'id="formatProductInput" ' +
            'type="submit" ' + 
            'value="Получить форматный продукт" ' +
          '>'
        );
        l('SHE: formatProductInput was placed.')
        var formatProductInput = document.querySelector("#formatProductInput");

        formatProductInput.addEventListener("click", () => {
          l("formatProduct starts formatting...")
          fetch("https://kz.siberianhealth.com/ru/store/header/order/showcase/search/", {
            "headers": {
              "accept": "application/json, text/javascript, */*; q=0.01",
              "accept-language": "ru,en-US;q=0.9,en;q=0.8,bg;q=0.7",
              "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
              "ml-contract": "M11123",
              "sec-ch-ua": "\"Not_A Brand\";v=\"99\", \"Google Chrome\";v=\"109\", \"Chromium\";v=\"109\"",
              "sec-ch-ua-mobile": "?0",
              "sec-ch-ua-platform": "\"Windows\"",
              "sec-fetch-dest": "empty",
              "sec-fetch-mode": "cors",
              "sec-fetch-site": "same-origin",
              "x-requested-with": "XMLHttpRequest"
            },
            "referrer": "https://kz.siberianhealth.com/ru/store/header/order/showcase/new/",
            "referrerPolicy": "strict-origin-when-cross-origin",
            "body": "searchType=category&category=0&name=&code=&days=0&cartId=" + this.getCartId(),
            "method": "POST",
            "mode": "cors",
            "credentials": "include"
          }).then(p => p.text().then(t => {
            blockList.insertAdjacentHTML(
              "beforebegin", 
              "<textarea " + sheConfig.style + ">" + t + "</textarea>"
            );
          }));

        });
        l('SHE: formatProductInput initialized.')
        return this;
      },
      getCartId() {
        var match = document.body.innerHTML.match(/cart: {"id":(\d+),/);
        return match[1];
      }
    },
    orderBackup: {
      init() {
        l('SHE: orderBackup initializing...');
        this.sale = 0.9;
        
        var blockFilter = document.querySelector("#blockFilter");
        
        vfy(
          blockFilter !== null, 
          'Expected that document.querySelector("#blockFilter") is not null.'
        );

        blockFilter.insertAdjacentHTML(
            "beforeend",
            '<textarea ' +
              sheConfig.textareaCols +
              sheConfig.style +
              'id="textareaOrderBackup" ' +
              'placeholder="Ctrl+Delete для копирования внесенного заказа">'+
            '</textarea>'
        );
        l('SHE: textareaOrderBackup was placed.')
        this.textareaOrderBackup = document.querySelector("#textareaOrderBackup");
        this.textareaOrderBackup.addEventListener(
          "keydown",
          (function (e) {
            if (e.ctrlKey && e.key === "Delete" && !(e.repeat) ) {
              l('SHE: backupOrder starting.')
              this.backupOrder.call(this);
            }
          }).bind(this)
        );
        l('SHE: orderBackup initialized.');
        return this; 
      },
      backupOrder() {
        var trs = document.querySelectorAll(".product-row:not(.absent)");

        vfy(
          trs !== null,
          'Expected that document.querySelectorAll(".product-row:not(.absent)") is not null.'
        );

        var result = "";
        for (var tr of trs) {
          var value = tr.querySelector(".order_count").value; 
          if (value === '' || value === '0') continue;
          result += tr.children[2].innerText + "\t" +
            tr.children[3].innerText + "\t" + 
            value + "\t" + 
            tr.children[6].innerText + "\t" +
            +(tr.children[7].innerText)*this.sale + "\n";
            l('SHE: forming backup result', {result})
        }      
        this.textareaOrderBackup.value = result;
      }
    },
    orderCleaning: {
      init() {
        l('SHE: orderCleaning initializing...')
        var blockList = document.querySelector("#blockList");

        vfy(
          blockList !== null, 
          'Expected that document.querySelector("#blockList") is not null'
        );

        blockList.insertAdjacentHTML(
          "beforebegin",
          '<input ' +
            sheConfig.style +
            'id="cleanOrderInput" ' +
            'type="submit" ' + 
            'value="Очистить заказ" ' +
          '>'
        );
        l('SHE: cleanOrderInput was placed.');
        var cleanOrderInput = document.querySelector("#cleanOrderInput");

        cleanOrderInput.addEventListener(
          "click",
          (function () {
            l('SHE: cleanOrderInput clicked.');
            var isOkToClean = confirm(
              "Все введеные количества будут очищены. Продолжить?"
            );
            
            if (!isOkToClean) {
              alert("Очистка отменена.");
              return;
            };

            this.cleanOrder.call(this);
          }).bind(this)
        );
        return this;
        l('SHE: cleanOrder initialized.')
      },
      cleanOrder() {
        var trs = document.querySelectorAll(".product-row:not(.absent)");
        vfy(
          trs !== null,
          'Expected that document.querySelectorAll(".product-row:not(.absent)") is not null.'
        );
        for (var tr of trs) {
          var inputs = tr?.children[13]?.children?.[0]?.children;
          vfy(
            inputs !== undefined,
            'Expected: tr?.children[13]?.children?.[0]?.children is not undefined.'
          );

          for (;inputs[1].value !== '';) {
            inputs[0].dispatchEvent(
              new Event("click", { bubbles: true })
            );
          }

        }
        alert("Заказ очищен.");
      }
    },
    autoOrder: {
      init() {
        l('SHE: autoOrder initializing...');
        var settings = {
          code_column: 0,
          amount_column: 2,
        };
        Object.assign(this, settings);

        var blockFilter = document.querySelector("#blockFilter");
        
        vfy(
          blockFilter !== null, 
          'Expected: document.querySelector("#blockFilter") is not null.'
        );

        blockFilter.insertAdjacentHTML(
            "beforeend",
            '<textarea ' +
            sheConfig.style +
            sheConfig.textareaCols +
            'id="textareaAutoOrder" ' +
            'placeholder="Вставьте таблицу с заказом и нажмите Ctrl+Delete">' +
            '</textarea>'
        );

        l('SHE: textareaAutoOrder was placed.')
        this.textareaAutoOrder = document.querySelector("#textareaAutoOrder");
        this.textareaAutoOrder.addEventListener(
          "keydown",
          (function (e) {
            if (e.ctrlKey && e.key === "Delete" && !(e.repeat) ) {
              l('SHE: shOutputToOrder started.');
              this.shOutputToOrder.call(
                this, 
                this.textareaAutoOrder.value,
                blockList
              )
            }
          }).bind(this)
        );
        l('SHE: autoOrder initialized.');
        return this;
      },
      shOutputToOrder(shOutput, blockList) {
        if(!shOutput) return;
        var order = {};
        for (var line of shOutput.split("\n")) {
          var splitted = line.split("\t");

          if ( ["Код", "Итог:"].includes(splitted[0]) ) continue; 

          order[splitted[this.code_column]] = {am: splitted[this.amount_column], name: splitted[1]};
        }
        l('SHE: shOutput converted to order-object.')
        var trs = blockList.querySelectorAll("tr");

        vfy(
          trs !== null, 
          'Expected: blockList.querySelectorAll("tr") is not null.'
        );

        for (var tr of trs) {
          var code = tr.children[2]?.innerText;
          if (order[code] && +order[code].am > 0) {
            var btn_more = tr.querySelectorAll("button")[1];
            vfy(
              btn_more !== null, 
              'Expected: tr.querySelectorAll("button")[1] is not null.'
              );
            for (var i = 0; i < +order[code].am; i++) {

              btn_more.dispatchEvent(
                new Event("click", { bubbles: true })
              )
            }
            l(code + ' added.')
            delete order[code];
          }
        }
        var notAdded = '';
        for (var code in order) {
          if (isFinite(order[code].am) && +order[code].am > 0) {
            notAdded += "" + order[code].name + ' --- ' + order[code].am + '\n\n';
          }
        }
        alert("Заказ сформирован. Из заказа не были добавлены:\n\n" + notAdded);
        this.textareaAutoOrder.value = "Заказ сформирован. Из заказа не были добавлены:\n\n" + notAdded;

      }
    },
    autoFacture: {
      init() {
        l('SHE: autoFacture initializing...');
        this.prepare.call(this);
        this._manageOrderTextareaCreating.call(this);
        l('SHE: autoFacture initialized.');
        return this;
      },
      prepare() {
        this.skipped = [];
        var d = document;
        var nodes = {
          productTabs: d.querySelector("#productTabs"), 
          codeInput: d.querySelector("#code"),
          nameInput: d.querySelector("#name"),
          productSearch: d.querySelector("#productSearch"),
          prodList: d.querySelector("#prodList"),
        };

        vfy(
            nodes.productTabs !== null &&
            nodes.codeInput !== null &&
            nodes.nameInput !== null &&
            nodes.productSearch !== null &&
            nodes.prodList !== null, 
          `Expected: 
          document.querySelector("#productTabs"), 
          document.querySelector("#code"), 
          document.querySelector("#name"),
          document.querySelector("#productSearch"), 
          document.querySelector("#prodList")
          are not null.
          `
        );

        var settings = {
          interval_time_ms: 1000,
          code_column: 0,
          amount_column: 2,
        };

        var intranet = d.querySelector("#intranet a");

        vfy(
          intranet !== null,
          'Expected: document.querySelector("#intranet a") is not null.'
        );

        this.query_config = {
          "headers": {
              "accept": "application/json, text/javascript, */*; q=0.01",
              "accept-language": "ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7",
              "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
              "ml-contract": intranet.innerText,
              "sec-ch-ua": "\"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\"",
              "sec-ch-ua-mobile": "?0",
              "sec-fetch-dest": "empty",
              "sec-fetch-mode": "cors",
              "sec-fetch-site": "same-origin",
              "x-requested-with": "XMLHttpRequest"
            },
            "referrer": location.href,
            "referrerPolicy": "strict-origin-when-cross-origin",
            "body": "",
            "method": "POST",
            "mode": "cors",
            "credentials": "include"
        }
        Object.assign(this, nodes, settings);
      },  
      _manageOrderTextareaCreating() { 
        this.productTabs.insertAdjacentHTML(
          "beforeend",
          '<textarea ' + 
            sheConfig.style +
            'placeholder="Вставьте заказ и нажмите Ctrl+Delete" ' + 
            'style="margin-left: 90px;" ' + 
            'rows="5" ' + 
            'cols="30" ' + 
            'id="textareaOrder">' +
          '</textarea>'
        );

        l('SHE: textareaOrder was placed.');
        this.textareaOrder = document.querySelector("#textareaOrder");

        this.textareaOrder.addEventListener(
          "keydown",
          (function (e) {
            if(e.ctrlKey && e.key === "Delete" && !(e.repeat) ) {
              l('SHE: textareaOrder event handling started.');
              this._handleOrderTextareaEvent.call(this);
            }
          }).bind(this)
        );
      },
      async _handleOrderTextareaEvent() {
        var factureDataElement = document.querySelectorAll(
            "#delBox div table tbody tr td"
        );

        vfy(
          factureDataElement !== null, 
          'Expected: document.querySelectorAll("#delBox div table tbody tr td") is not null.'
        );

        this.query_order = {
          positions: [],
          factureId: factureDataElement[0]?.innerText
        };

        this.textareaOrder.disabled = true;
        this._prepareOrderObject.call(this);

        async function* generator() {
          for (var index = 0; index < this.order.length; index++) {
            await this._handleOrderLine.call(this, this.order[index]);
            this.textareaOrder.value = "Прогресс: " + (index+1) + "/" + this.order.length;
            yield index;
          }
        }
        
        for await (var value of generator.call(this)) {}

        this._turnQueryOrderToQueryConfig.call(this);

        var promise = await fetch("/ru/store/header/new/addproducts/", this.query_config);
        var promise_text = await promise.text();

        this.textareaOrder.value = this._skippedToTextarea.call(this);

        alert(this.textareaOrder.value);

      },
      _skippedToTextarea() {
        var string = "Пропущенные позиции:\n\n";
        for (var line of this.skipped) {
          string += line[1] + " --- " + line[2] + '\n\n';
        }
        return string;
      },
      _turnQueryOrderToQueryConfig() {
        var body = "factura_id=" + this.query_order.factureId;
        for (var line of this.query_order.positions) {
          body += "&" + line.name + "=" + line.amount;
        }
        this.query_config["body"] = body;
      },
      _prepareOrderObject() {
        this.order = [];
        for ( var raw_line of this.textareaOrder.value.split("\n") ) {
          var line = raw_line.split("\t");
          if (line[0] === "Код" || line[0] === "Итог:") continue;
          this.order.push(line);
        }
      },
      async _handleOrderLine(line) {
        this.codeInput.value = line[this.code_column];
        if (this.prodList.style.display !== "none") {
          this.prodList.style.display = "none";
        }
        this.productSearch.dispatchEvent(new Event("click"))

        await new Promise( (function (resolve) {
          var interval = setInterval( (function () {
            if (this.prodList.style.display !== "none") {
              clearInterval(interval)
              resolve()
            }
          }).bind(this), this.interval_time_ms)
        }).bind(this));
        this._handleProductAddingToQueryOrder.call(this, line);
      },
      _handleProductAddingToQueryOrder(line) {
        var amount_inputs = document.querySelectorAll("#productForm table input");
        vfy(
          amount_inputs !== null,
          'Expected: document.querySelectorAll("#productForm table input") is not null.'
        );
        var remain_td = document.querySelectorAll("#productForm tbody tr td");
        vfy(
          remain_td !== null,
          'Expected: document.querySelectorAll("#productForm tbody tr td") is not null.'
        );
        if (
          amount_inputs.length > 1 || 
          !document.querySelector("#prodList form") ||
          +remain_td[3].innerText < line[this.amount_column]
        ) 
        {
            this.skipped.push(line);
            return;
        }
        var input = document.querySelectorAll("#productForm table input");
        vfy(
          input !== null,
            'Expected: document.querySelectorAll("#productForm table input") is not null.'          
        );  
        this.query_order.positions.push({
          name: input[0].name,
          amount: line[this.amount_column],
        });
      }
    },
    allFactureItemsCheckbox: {
      init() {
        this.cookCheckbox.call(this);
        return this;
      },
      cookCheckbox(event=false) {
        var facturaStruct = document.querySelector("#facturaStruct");
        vfy(
          facturaStruct !== null,
          'Expected: document.querySelector("#itemsForm td")'
        );
        facturaStruct.insertAdjacentHTML(
          'afterbegin',
          '<input id="sheItemsCheckAll" type="checkbox"> Отметить все позиции<br>'
        );
        var itemsCheckAll = document.querySelector("#sheItemsCheckAll");
        vfy(
          itemsCheckAll !== null,
          'Expected: document.querySelector("#sheItemsCheckAll") !== null'
        );
        itemsCheckAll.addEventListener('click', function (event) {
          event.stopPropagation();
          var itemChecks = document.querySelectorAll(".itemCheck");
          vfy(
            itemChecks !== null,
            'Expected: document.querySelectorAll(".itemCheck") !== null'
          );
          if (itemsCheckAll.checked) {
            for (var itemCheck of itemChecks) {
              itemCheck.checked = true;
            }
            return;
          }
          for (var itemCheck of itemChecks) {
            itemCheck.checked = false;
          }
        });
      }
    },
  }
};
try {
  sheContent.init();
}
catch(er) {
  alert(er);
  console.error(er.stack);
}
